CP_AGGRESSIVE_CACHE=TRUE $ pod install --no-repo-update --verbose --no-ansi 2>&1
Analyzing dependencies

Fetching external sources
-> Fetching podspec for `Test` from `https://raw.githubusercontent.com/luisdelarosa/AFRaptureXMLRequestOperation/9800263d87304d0cda5e8b6afbe702e1dab55392/Test.spec`

Resolving dependencies of `Podfile`
Resolving dependencies for target `Pods' (iOS 6.0)
  - Test (from `https://raw.githubusercontent.com/luisdelarosa/AFRaptureXMLRequestOperation/9800263d87304d0cda5e8b6afbe702e1dab55392/Test.spec`)
    - Test/Foo

Comparing resolved specification to the sandbox manifest
  A Test

Downloading dependencies

-> Installing Test (0.0.1)
 > GitHub download
   $ /usr/local/bin/git config core.bare
   true
   $ /usr/local/bin/git config core.bare
   true
 > Updating cache git repo (CACHES_DIR/GitHub/ac2e144ba86f0bc59ac0f1d79e724d89f220e1b6)
     $ /usr/local/bin/git remote update
     Fetching origin
 > Cloning to Pods folder
     $ /usr/local/bin/git clone CACHES_DIR/GitHub/ac2e144ba86f0bc59ac0f1d79e724d89f220e1b6
     ROOT/tmp/install_subspecs_no_duplicate_prefix/Pods/Test
     Cloning into 'ROOT/tmp/install_subspecs_no_duplicate_prefix/Pods/Test'...
     done.
  - Running pre install hooks

Generating Pods project
  - Creating Pods project
  - Adding source files to Pods project
  - Adding frameworks to Pods project
  - Adding libraries to Pods project
  - Adding resources to Pods project
  - Linking headers
  - Installing libraries
    - Installing target `Pods-Test` iOS 6.0
      - Adding Build files
      - Adding resource bundles to Pods project
      - Generating public xcconfig file at `Pods/Pods-Test.xcconfig`
      - Generating private xcconfig file at `Pods/Pods-Test-Private.xcconfig`
      - Generating prefix header at `Pods/Pods-Test-prefix.pch`
      - Generating dummy source file at `Pods/Pods-Test-dummy.m`
    - Installing target `Pods` iOS 6.0
      - Generating Release xcconfig file at `Pods/Pods.Release.xcconfig`
      - Generating Debug xcconfig file at `Pods/Pods.Debug.xcconfig`
      - Generating target environment header at `Pods/Pods-environment.h`
      - Generating copy resources script at `Pods/Pods-resources.sh`
      - Generating acknowledgements at `Pods/Pods-acknowledgements.plist`
      - Generating acknowledgements at `Pods/Pods-acknowledgements.markdown`
      - Generating dummy source file at `Pods/Pods-dummy.m`
  - Running post install hooks
  - Writing Xcode project file to `Pods/Pods.xcodeproj`
  - Writing Lockfile in `Podfile.lock`
  - Writing Manifest in `Pods/Manifest.lock`

Integrating client project

[!] From now on use `SampleApp.xcworkspace`.

Integrating Pod target `Pods-Test` into aggregate target Pods of project `SampleApp.xcodeproj`.

[!] The `iOS App [Release]` target overrides the `OTHER_CFLAGS` build setting defined in `Pods/Pods.Release.xcconfig'.This can lead to problems with the CocoaPods installation
    - Use the `$(inherited)` flag, or
    - Remove the build settings from the target.
